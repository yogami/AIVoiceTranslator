
> rest-express@1.0.0 test
> NODE_ENV=test vitest --config=test-config/vitest/vitest.unified.config.mjs --run -t BUGFIX


 RUN  v3.1.4 /Users/yamijala/gitprojects/AIVoiceTranslator

stdout | tests/integration/diagnostics-service.integration.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/WebSocketServer.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/services/WebSocketServer.integration.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/WebSocketServer.test.ts (89 tests | 89 skipped)
stdout | tests/integration/diagnostics-service.integration.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

stdout | tests/integration/services/WebSocketServer.integration.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

stdout | tests/unit/storage/session.storage.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/services/WebSocketServer.integration.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests
[SETUP] Initializing test database...
Initializing test database...

stdout | tests/integration/diagnostics-service.integration.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

stdout | tests/unit/storage/session.storage.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

 ↓ tests/unit/storage/session.storage.test.ts (33 tests | 33 skipped)
 ↓ tests/integration/diagnostics-service.integration.test.ts (18 tests | 18 skipped)
stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests
All tables cleared.

stdout | tests/unit/services/TextToSpeechService.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/storage/DatabaseStorage-integration.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/TextToSpeechService.test.ts (19 tests | 19 skipped)
stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests
Default test data added.

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests
Test database initialized successfully.

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TEST] Setting up isolated database and server...
[TestIsolation] Creating fresh storage for websocket-integration-test
[TestIsolation] Resetting database for websocket-integration-test

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:52 [[32minfo[39m]: DatabaseStorage reset complete for test environment.

stdout | tests/unit/services/DiagnosticsService.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TestIsolation] Initializing default languages for websocket-integration-test

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TestIsolation] Database ready for websocket-integration-test

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TEST] HTTP server started on port 57284

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:53 [[32minfo[39m]: Started classroom session cleanup task
2025-07-04 00:48:53 [[32minfo[39m]: Session lifecycle management started
2025-07-04 00:48:53 [[32minfo[39m]: SessionCountCacheService started
[TEST] Setup complete

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
=== START: Session lifecycle bug test with REAL backend ===
[DEBUG] Creating WebSocket for path: / (client #1) on port 57284

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:53 [[32minfo[39m]: New WebSocket connection established
2025-07-04 00:48:53 [[32minfo[39m]: New WebSocket connection established
2025-07-04 00:48:53 [[32minfo[39m]: Sending connection confirmation: {"sessionId":"session-1-1751582933479","classroomCode":null}
2025-07-04 00:48:53 [[32minfo[39m]: Connection confirmation sent successfully

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[DEBUG] WebSocket OPENED for client #1
[DEBUG] Client #1 received message: connection

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:53 [[32minfo[39m]: Starting session cleanup service
2025-07-04 00:48:53 [[32minfo[39m]: SessionCleanupService started

stdout | tests/integration/storage/DatabaseStorage-integration.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

 ↓ tests/integration/storage/DatabaseStorage-integration.test.ts (24 tests | 24 skipped)
stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TEST] Found message of type connection for client #1: {
  type: [32m'connection'[39m,
  status: [32m'connected'[39m,
  sessionId: [32m'session-1-1751582933479'[39m
}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TEST] Sending message to client #1: {
  type: [32m'register'[39m,
  role: [32m'teacher'[39m,
  languageCode: [32m'en-US'[39m,
  name: [32m'Test Teacher'[39m
}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:53 [[32minfo[39m]: Processing message type=register from connection: {"role":"teacher","languageCode":"en-US","name":"Test Teacher"}
2025-07-04 00:48:53 [[32minfo[39m]: Changing connection role from undefined to teacher

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:53 [[32minfo[39m]: Creating session for teacher: {"sessionId":"session-1-1751582933479"}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[DbSessionStorage.createSession] Attempting to insert session: {
  sessionId: [32m'session-1-1751582933479'[39m,
  values: {
    sessionId: [32m'session-1-1751582933479'[39m,
    isActive: [33mfalse[39m,
    teacherLanguage: [1mnull[22m,
    classCode: [1mnull[22m,
    studentLanguage: [1mnull[22m,
    lastActivityAt: [35m2025-07-03T22:48:53.706Z[39m
  }
}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[DbSessionStorage.createSession] Successfully inserted session: {
  id: [33m4752[39m,
  sessionId: [32m'session-1-1751582933479'[39m,
  classCode: [1mnull[22m,
  teacherLanguage: [1mnull[22m,
  studentLanguage: [1mnull[22m,
  startTime: [35m2025-07-03T22:48:53.706Z[39m,
  endTime: [1mnull[22m,
  studentsCount: [33m0[39m,
  totalTranslations: [33m0[39m,
  averageLatency: [1mnull[22m,
  isActive: [33mtrue[39m,
  quality: [32m'unknown'[39m,
  qualityReason: [1mnull[22m,
  lastActivityAt: [35m2025-07-03T22:48:53.706Z[39m
}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:53 [[32minfo[39m]: Successfully created new session in storage: {"sessionId":"session-1-1751582933479"}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:53 [[32minfo[39m]: Created new classroom session: ZHAM09 for session session-1-1751582933479
[DbSessionStorage.updateSession] Attempting to update session: {
  sessionId: [32m'session-1-1751582933479'[39m,
  updates: { teacherLanguage: [32m'en-US'[39m }
}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[DbSessionStorage.updateSession] Successfully updated session: {
  id: [33m4752[39m,
  sessionId: [32m'session-1-1751582933479'[39m,
  classCode: [1mnull[22m,
  teacherLanguage: [32m'en-US'[39m,
  studentLanguage: [1mnull[22m,
  startTime: [35m2025-07-03T22:48:53.706Z[39m,
  endTime: [1mnull[22m,
  studentsCount: [33m0[39m,
  totalTranslations: [33m0[39m,
  averageLatency: [1mnull[22m,
  isActive: [33mtrue[39m,
  quality: [32m'unknown'[39m,
  qualityReason: [1mnull[22m,
  lastActivityAt: [35m2025-07-03T22:48:53.706Z[39m
}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:53 [[32minfo[39m]: Generated classroom code ZHAM09 for teacher session session-1-1751582933479

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:53 [[32minfo[39m]: Updated connection: {"role":"teacher","languageCode":"en-US","settings":{}}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[DEBUG] Client #1 received message: classroom_code
[DEBUG] Client #1 received message: register

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TEST] Found message of type register for client #1: {
  type: [32m'register'[39m,
  status: [32m'success'[39m,
  data: { role: [32m'teacher'[39m, languageCode: [32m'en-US'[39m, settings: {} }
}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TEST] Found message of type classroom_code for client #1: {
  type: [32m'classroom_code'[39m,
  code: [32m'ZHAM09'[39m,
  sessionId: [32m'session-1-1751582933479'[39m,
  expiresAt: [33m1751590133781[39m
}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
=== Teacher registered with classroom code: ZHAM09, sessionId: session-1-1751582933479 ===

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
=== Session after teacher registration === {
  id: [33m4752[39m,
  sessionId: [32m'session-1-1751582933479'[39m,
  isActive: [33mtrue[39m,
  studentsCount: [33m0[39m
}
=== Session is active, bug might be fixed already ===
[DEBUG] Creating WebSocket for path: /ws (client #2) on port 57284

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:53 [[32minfo[39m]: New WebSocket connection established
2025-07-04 00:48:53 [[32minfo[39m]: New WebSocket connection established
2025-07-04 00:48:53 [[32minfo[39m]: Sending connection confirmation: {"sessionId":"session-2-1751582933888","classroomCode":null}
2025-07-04 00:48:53 [[32minfo[39m]: Connection confirmation sent successfully

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[DEBUG] WebSocket OPENED for client #2
[DEBUG] Client #2 received message: connection

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TEST] Found message of type connection for client #2: {
  type: [32m'connection'[39m,
  status: [32m'connected'[39m,
  sessionId: [32m'session-2-1751582933888'[39m
}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
=== Student connection message === {
  type: [32m'connection'[39m,
  status: [32m'connected'[39m,
  sessionId: [32m'session-2-1751582933888'[39m
}
=== Attempting student registration ===

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:54 [[32minfo[39m]: Processing message type=register from connection: {"role":"student","languageCode":"es-ES","name":"Test Student"}
2025-07-04 00:48:54 [[32minfo[39m]: Changing connection role from undefined to student
2025-07-04 00:48:54 [[32minfo[39m]: Updated connection: {"role":"student","languageCode":"es-ES","settings":{}}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[DEBUG] Client #2 received message: register

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:54 [[31merror[39m]: Student trying to join non-existent session: {"studentSessionId":"session-2-1751582933888"}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[DEBUG] Client #2 received message: error

stdout | tests/unit/services/TranslationService.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/DiagnosticsService.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

 ↓ tests/unit/services/DiagnosticsService.test.ts (14 tests | 14 skipped)
stdout | tests/unit/services/TranslationService.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

 ↓ tests/unit/services/TranslationService.test.ts (20 tests | 20 skipped)
stdout | tests/unit/database-storage.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/storage/translation.storage.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
=== All messages received after student registration attempt === [
  {
    type: [32m'register'[39m,
    status: [32m'success'[39m,
    data: { role: [32m'student'[39m, languageCode: [32m'es-ES'[39m, settings: {} }
  },
  {
    type: [32m'error'[39m,
    message: [32m'Session not found. Please ask teacher for a new link.'[39m,
    code: [32m'SESSION_NOT_FOUND'[39m
  }
]
=== BUG EXPOSED: Student got error during registration === {
  type: [32m'error'[39m,
  message: [32m'Session not found. Please ask teacher for a new link.'[39m,
  code: [32m'SESSION_NOT_FOUND'[39m
}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TEST] Cleaning up...
2025-07-04 00:48:55 [[32minfo[39m]: [WebSocketServer] Shutting down...
2025-07-04 00:48:55 [[32minfo[39m]: [WebSocketServer] Session lifecycle interval cleared.
2025-07-04 00:48:55 [[32minfo[39m]: SessionCountCacheService stopped
2025-07-04 00:48:55 [[32minfo[39m]: [WebSocketServer] Session count cache service stopped.
2025-07-04 00:48:55 [[32minfo[39m]: SessionService shutdown completed
2025-07-04 00:48:55 [[32minfo[39m]: [WebSocketServer] SessionService shutdown completed.
2025-07-04 00:48:55 [[32minfo[39m]: Stopped session cleanup service
2025-07-04 00:48:55 [[32minfo[39m]: [WebSocketServer] SessionCleanupService stopped.
2025-07-04 00:48:55 [[32minfo[39m]: [WebSocketServer] Closing 2 client connections...
2025-07-04 00:48:55 [[32minfo[39m]: [WebSocketServer] All client connections terminated.
2025-07-04 00:48:55 [[32minfo[39m]: All classroom sessions cleared
2025-07-04 00:48:55 [[32minfo[39m]: [WebSocketServer] Internal maps and sets cleared.
2025-07-04 00:48:55 [[32minfo[39m]: [WebSocketServer] Shutdown complete.

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TestIsolation] Cleaning up storage for websocket-integration-test

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[DEBUG] WebSocket closed for client #2. Code: 1006

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[DEBUG] WebSocket closed for client #1. Code: 1006

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:55 [[32minfo[39m]: WebSocket disconnected, sessionId: {}
2025-07-04 00:48:55 [[32minfo[39m]: WebSocket connection closed {}

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:55 [[32minfo[39m]: WebSocket disconnected, sessionId: {}
2025-07-04 00:48:55 [[32minfo[39m]: WebSocket connection closed {}
2025-07-04 00:48:55 [[32minfo[39m]: [WebSocketServer] WebSocket server closed.

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
2025-07-04 00:48:55 [[32minfo[39m]: DatabaseStorage reset complete for test environment.

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
[TEST] Cleanup complete

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests
[TEARDOWN] Closing test database...
Closing database connection...

stdout | tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests
Database connection closed.

 ❯ tests/integration/services/WebSocketServer.integration.test.ts (29 tests | 1 failed | 28 skipped) 4044ms
   ↓ WebSocketServer Comprehensive Integration Tests > Real Integration Flow > should handle complete teacher-student translation flow with real orchestrator
   ↓ WebSocketServer Comprehensive Integration Tests > Real Integration Flow > should handle multiple students with different languages through real orchestrator
   ↓ WebSocketServer Comprehensive Integration Tests > Real Integration Flow > should persist translations to database through real orchestrator
   ↓ WebSocketServer Comprehensive Integration Tests > Message Validation Integration > should handle invalid JSON messages
   ↓ WebSocketServer Comprehensive Integration Tests > Message Validation Integration > should handle unknown message types
   ↓ WebSocketServer Comprehensive Integration Tests > Message Validation Integration > should handle messages with missing required fields
   ↓ WebSocketServer Comprehensive Integration Tests > Connection Lifecycle Integration > should handle basic connection and disconnection
   ↓ WebSocketServer Comprehensive Integration Tests > Connection Lifecycle Integration > should allow a student to join immediately after the teacher creates the session
   ↓ WebSocketServer Comprehensive Integration Tests > Connection Lifecycle Integration > should return an error if a student tries to join a non-existent session (invalid code)
   ↓ WebSocketServer Comprehensive Integration Tests > Connection Lifecycle Integration > should handle malformed URLs gracefully
   ↓ WebSocketServer Comprehensive Integration Tests > Teacher-Student Flow Integration > should handle complete teacher-student session flow
   ↓ WebSocketServer Comprehensive Integration Tests > Teacher-Student Flow Integration > should handle teacher reconnection to existing session
   ↓ WebSocketServer Comprehensive Integration Tests > Translation Flow Integration > should translate teacher transcription to all students
   ↓ WebSocketServer Comprehensive Integration Tests > Translation Flow Integration > should ignore transcriptions from students
   ↓ WebSocketServer Comprehensive Integration Tests > Settings Management Integration > should update client settings
   ↓ WebSocketServer Comprehensive Integration Tests > Settings Management Integration > should merge settings updates
   ↓ WebSocketServer Comprehensive Integration Tests > Audio Processing Integration > should process audio from teacher
   ↓ WebSocketServer Comprehensive Integration Tests > Audio Processing Integration > should ignore small audio chunks
   ↓ WebSocketServer Comprehensive Integration Tests > Audio Processing Integration > should ignore audio from students
   ↓ WebSocketServer Comprehensive Integration Tests > TTS Requests Integration > should handle valid TTS request
   ↓ WebSocketServer Comprehensive Integration Tests > TTS Requests Integration > should handle TTS request with missing language code
   ↓ WebSocketServer Comprehensive Integration Tests > Ping/Pong and Heartbeat Integration > should respond to ping messages
   ↓ WebSocketServer Comprehensive Integration Tests > Ping/Pong and Heartbeat Integration > should handle WebSocket ping frames
   ↓ WebSocketServer Comprehensive Integration Tests > Server Lifecycle and Cleanup Integration > should properly handle server shutdown
   ↓ WebSocketServer Comprehensive Integration Tests > Session Lifecycle Management Integration > should update session activity on message
   ↓ WebSocketServer Comprehensive Integration Tests > Session Lifecycle Management Integration > should handle multiple connections in the same session
   ↓ WebSocketServer Comprehensive Integration Tests > Error Handling Integration > should handle graceful degradation when translation fails
   ↓ WebSocketServer Comprehensive Integration Tests > Error Handling Integration > should handle connection errors gracefully
   × WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug) 3243ms
     → SESSION LIFECYCLE BUG EXPOSED: Student cannot join because session is inactive. Error: Session not found. Please ask teacher for a new link.
stdout | tests/unit/services/websocket/RegisterMessageHandler.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/storage/translation.storage.test.ts (18 tests | 18 skipped)
stdout | tests/unit/database-storage.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

 ↓ tests/unit/services/websocket/RegisterMessageHandler.test.ts (17 tests | 17 skipped)
 ↓ tests/unit/database-storage.test.ts (17 tests | 17 skipped)
stdout | tests/unit/routes.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/translation-flow-integration.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/storage/language.storage.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/integration/translation-flow-integration.test.ts (5 tests | 5 skipped)
 ↓ tests/unit/routes.test.ts (21 tests | 21 skipped)
stdout | tests/integration/services/audio-pipeline-integration.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/websocket/ConnectionLifecycleManager.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/ConnectionLifecycleManager.test.ts (17 tests | 17 skipped)
stdout | tests/integration/services/audio-pipeline-integration.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

 ↓ tests/integration/services/audio-pipeline-integration.test.ts (5 tests | 5 skipped)
 ↓ tests/unit/storage/language.storage.test.ts (23 tests | 23 skipped)
stdout | tests/unit/storage/transcript.storage.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/websocket/ClassroomSessionManager.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/ClassroomSessionManager.test.ts (31 tests | 31 skipped)
stdout | tests/unit/services/websocket/TranslationOrchestrator.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/TranslationOrchestrator.test.ts (11 tests | 11 skipped)
stdout | tests/unit/services/WebSocketServer.lifecycle.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/session-lifecycle.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/storage/transcript.storage.test.ts (11 tests | 11 skipped)
stdout | tests/unit/services/WebSocketServer.lifecycle.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

 ↓ tests/unit/services/WebSocketServer.lifecycle.test.ts (17 tests | 17 skipped)
stdout | tests/unit/services/websocket/ConnectionManager.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/ConnectionManager.test.ts (20 tests | 20 skipped)
stdout | tests/unit/services/SessionCleanupService.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/core/translation.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/core/translation.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

 ↓ tests/unit/core/translation.test.ts (10 tests | 10 skipped)
stdout | tests/integration/session-lifecycle.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

 ↓ tests/integration/session-lifecycle.test.ts (10 tests | 10 skipped)
stdout | tests/unit/services/websocket/TTSRequestMessageHandler.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/TTSRequestMessageHandler.test.ts (13 tests | 13 skipped)
 ↓ tests/unit/services/SessionCleanupService.test.ts (16 tests | 16 skipped)
stdout | tests/unit/services/AudioTranscriptionService.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/AudioTranscriptionService.test.ts (12 tests | 12 skipped)
stdout | tests/unit/storage/user.storage.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/SpeechTranslationService.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/SessionLifecycleService.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/SpeechTranslationService.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

 ↓ tests/unit/services/SpeechTranslationService.test.ts (8 tests | 8 skipped)
 ↓ tests/unit/services/SessionLifecycleService.test.ts (8 tests | 8 skipped)
stdout | tests/unit/core/audio-processing.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/SessionCountCacheService.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/core/audio-processing.test.ts (11 tests | 11 skipped)
 ↓ tests/unit/services/SessionCountCacheService.test.ts (17 tests | 17 skipped)
 ↓ tests/unit/storage/user.storage.test.ts (13 tests | 13 skipped)
stdout | tests/unit/services/websocket/SettingsMessageHandler.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/SettingsMessageHandler.test.ts (9 tests | 9 skipped)
stdout | tests/unit/services/websocket/TranscriptionMessageHandler.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/TranscriptionMessageHandler.test.ts (7 tests | 7 skipped)
stdout | tests/unit/index.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/index.test.ts (2 tests | 2 skipped)
stdout | tests/integration/services/openai.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/api/routes.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/api/routes.test.ts (7 tests | 7 skipped)
stdout | tests/unit/services/websocket/SessionService.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/services/openai.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

 ↓ tests/integration/services/openai.test.ts (5 tests | 5 skipped)
 ↓ tests/unit/services/websocket/SessionService.test.ts (13 tests | 13 skipped)
stdout | tests/integration/services/translation-with-tts-integration.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/websocket/AudioMessageHandler.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/AudioMessageHandler.test.ts (8 tests | 8 skipped)
stdout | tests/unit/services/websocket/MessageHandler.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/MessageHandler.test.ts (10 tests | 10 skipped)
stdout | tests/integration/services/translation-with-tts-integration.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

 ↓ tests/integration/services/translation-with-tts-integration.test.ts (5 tests | 5 skipped)
stdout | tests/unit/config.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/config.test.ts (8 tests | 8 skipped)
stdout | tests/integration/workflows/performance.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/integration/workflows/performance.test.ts (10 tests | 10 skipped)
stdout | tests/unit/services/websocket/PingMessageHandler.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/PingMessageHandler.test.ts (6 tests | 6 skipped)
stdout | tests/unit/services/websocket/PongMessageHandler.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/websocket/PongMessageHandler.test.ts (7 tests | 7 skipped)
stdout | tests/integration/api/routes.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/HeartbeatManager.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/message-handling-integration.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/HeartbeatManager.test.ts (2 tests | 2 skipped)
stdout | tests/integration/workflows/language-coverage.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/integration/workflows/language-coverage.test.ts (2 tests | 2 skipped)
stdout | tests/integration/message-handling-integration.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

stdout | tests/unit/services/AudioFileHandler.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/AudioFileHandler.test.ts (4 tests | 4 skipped)
stdout | tests/integration/api/routes.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

stdout | tests/unit/openai.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/api/routes.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

 ↓ tests/integration/api/routes.test.ts (4 tests | 4 skipped)
stdout | tests/integration/message-handling-integration.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

 ↓ tests/integration/message-handling-integration.test.ts (1 test | 1 skipped)
stdout | tests/unit/openai.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

 ↓ tests/unit/openai.test.ts (3 tests | 3 skipped)
stdout | tests/integration/workflows/edge-cases.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/integration/workflows/edge-cases.test.ts (3 tests | 3 skipped)
stdout | tests/integration/simple-persistence-diagnostic.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/services/DevelopmentModeHelper.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

 ↓ tests/unit/services/DevelopmentModeHelper.test.ts (3 tests | 3 skipped)
stdout | tests/integration/server/server-middleware.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/unit/server.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/simple-persistence-diagnostic.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

 ↓ tests/integration/simple-persistence-diagnostic.test.ts (2 tests | 2 skipped)
stdout | tests/integration/workflows/error-recovery.test.ts
Test environment configured successfully from .env.test:
- Node Environment: test
- Host: 0.0.0.0
- Port: 5000
- TTS Service: openai
- OpenAI Key: Set
- Database URL: Set
- Redis URL: Set
- Log Level: info
- Vite API URL: http://127.0.0.1:5000
- Vite WS URL: ws://127.0.0.1:5000

stdout | tests/integration/server/server-middleware.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

 ↓ tests/integration/workflows/error-recovery.test.ts (3 tests | 3 skipped)
stdout | tests/integration/server/server-middleware.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

stdout | tests/unit/server.test.ts
🔧 DATABASE: Loading test environment config from .env.test
🔧 DATABASE: NODE_ENV = test
🔧 DATABASE: DATABASE_URL exists = [33mtrue[39m
🔧 DATABASE: DATABASE_URL type = Neon

stdout | tests/integration/server/server-middleware.test.ts
🔧 SERVER/SERVER: Loading environment from .env.test (NODE_ENV=test)

 ↓ tests/integration/server/server-middleware.test.ts (2 tests | 2 skipped)
stdout | tests/unit/server.test.ts
OpenAI API key status: Present
OpenAI client initialized successfully

stdout | tests/unit/server.test.ts
🔧 SERVER/SERVER: Loading environment from .env.test (NODE_ENV=test)

 ↓ tests/unit/server.test.ts (3 tests | 3 skipped)

⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  tests/integration/services/WebSocketServer.integration.test.ts > WebSocketServer Comprehensive Integration Tests > BUGFIX: student should be able to join immediately after teacher registers (session lifecycle bug)
Error: SESSION LIFECYCLE BUG EXPOSED: Student cannot join because session is inactive. Error: Session not found. Please ask teacher for a new link.
 ❯ tests/integration/services/WebSocketServer.integration.test.ts:938:15
    936|       if (errorMessage) {
    937|         console.log('=== BUG EXPOSED: Student got error during registr…
    938|         throw new Error(`SESSION LIFECYCLE BUG EXPOSED: Student cannot…
       |               ^
    939|       } else if (registerMessage) {
    940|         console.log('=== Student registration succeeded ===', register…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯


 Test Files  1 failed | 55 skipped (56)
      Tests  1 failed | 705 skipped (706)
   Start at  00:48:47
   Duration  35.52s (transform 2.68s, setup 2.29s, collect 52.94s, tests 4.04s, environment 17ms, prepare 20.70s)

