# AIVoiceTranslator Environment Configuration
# Copy this file to .env and update with your values

# ===== REQUIRED CONFIGURATION =====

# OpenAI API Key (required for translation features)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# ===== SERVER CONFIGURATION (Optional) =====

# Server port (default: 5000)
PORT=

# Hostname or IP address (default: localhost)
HOST=

# Node environment (development, production, test)
NODE_ENV=development

# Session secret for encryption (generate a random string)
SESSION_SECRET=your-random-session-secret-here

# Log level for application (default: info)
LOG_LEVEL=info

# ===== SPEECH SERVICES CONFIGURATION =====

# Communication Protocol for real-time communication
# Options: 'websocket' (default), 'webrtc' (experimental)
# websocket: Traditional WebSocket communication (recommended for production)
# webrtc: WebRTC peer-to-peer communication (for future direct connection features)
# Default: websocket
COMMUNICATION_PROTOCOL=websocket

# Speech-to-Text (STT) service type
# Options: 'auto' (OpenAI with WhisperCpp fallback), 'openai' (only OpenAI), 'whisper' (only local)
# Recommended: 'auto' for production, 'auto' or 'whisper' for development
STT_SERVICE_TYPE=auto

# Translation service type
# Options: 'auto' (OpenAI with MyMemory fallback), 'openai' (only OpenAI), 'mymemory' (only MyMemory)
# Recommended: 'auto' for production reliability
TRANSLATION_SERVICE_TYPE=auto

# Text-to-Speech (TTS) service type  
# Options: 'auto' (OpenAI → ElevenLabs → Browser fallback), 'openai', 'browser', 'elevenlabs'
# Recommended: 'auto' for production reliability
TTS_SERVICE_TYPE=auto

# ElevenLabs API Key for TTS auto-fallback (optional)
# Get your API key from: https://elevenlabs.io/
# If not provided, TTS will fallback directly from OpenAI to Browser TTS
ELEVENLABS_API_KEY=your-elevenlabs-api-key-here

# WhisperCpp model for local transcription fallback
# Options: 'tiny', 'base', 'small', 'medium', 'large'
# Recommended: 'base' (good balance), 'tiny' for faster development testing
WHISPER_MODEL=base

# Enable detailed translation logging (optional)
# Set to 'true' to see detailed logs of translation process
ENABLE_DETAILED_TRANSLATION_LOGGING=false

# ===== DATA STORAGE =====

# PostgreSQL connection URL (required for database storage)
# Format: postgresql://username:password@host:port/database
# Example: postgresql://postgres:password@localhost:5432/aivoicetranslator
DATABASE_URL=

# ===== FRONTEND CONFIGURATION (Vite) =====
# API and WebSocket URLs for frontend to connect to backend
VITE_API_URL=http://localhost:5000
VITE_WS_URL=ws://localhost:5000

# ===== SESSION TIMEOUT CONFIGURATION (Optional) =====
# All values are in milliseconds. If not set, defaults based on NODE_ENV will be used.

# How long a teacher-only session must exist before being considered "real" 
# (shorter sessions are ended immediately on disconnect)
# Default: 5000ms (5 seconds) in production, 1000ms (1 second) in test
SESSION_VERY_SHORT_THRESHOLD_MS=5000

# How long before inactive sessions are cleaned up
# Default: 5400000ms (90 minutes) in production, 30000ms (30 seconds) in test  
SESSION_STALE_TIMEOUT_MS=5400000

# Grace period after all students leave before ending session
# Default: 600000ms (10 minutes) in production, 5000ms (5 seconds) in test
SESSION_ALL_STUDENTS_LEFT_TIMEOUT_MS=600000

# How long teacher-only sessions wait for students before cleanup
# Default: 900000ms (15 minutes) in production, 3000ms (3 seconds) in test
SESSION_EMPTY_TEACHER_TIMEOUT_MS=900000

# ===== ADVANCED SESSION CONFIGURATION (Optional) =====

# How often the cleanup service runs to check for stale sessions
# Default: 120000ms (2 minutes) in production, 1000ms (1 second) in test
SESSION_CLEANUP_INTERVAL_MS=120000

# How long classroom codes remain valid before expiring
# Default: 7200000ms (2 hours) in production, 15000ms (15 seconds) in test
CLASSROOM_CODE_EXPIRATION_MS=7200000

# How often expired classroom codes are cleaned up
# Default: 900000ms (15 minutes) in production, 3000ms (3 seconds) in test
CLASSROOM_CODE_CLEANUP_INTERVAL_MS=900000

# How often WebSocket health checks (pings) are sent
# Default: 30000ms (30 seconds) in production, 2000ms (2 seconds) in test
HEALTH_CHECK_INTERVAL_MS=30000

# Grace period for teacher reconnection to existing sessions
# Default: 300000ms (5 minutes) in production, 3000ms (3 seconds) in test
TEACHER_RECONNECTION_GRACE_PERIOD_MS=300000

# Minimum audio data length for processing (bytes)
# Default: 100 bytes for both production and test
MIN_AUDIO_DATA_LENGTH=100

# Minimum audio buffer length for processing (bytes)  
# Default: 100 bytes for both production and test
MIN_AUDIO_BUFFER_LENGTH=100

# Delay before closing connection after session expired message (milliseconds)
# Default: 1000ms (1 second) in production, 50ms in test
SESSION_EXPIRED_MESSAGE_DELAY_MS=1000

# Delay before closing connection after invalid classroom message (milliseconds)
# Default: 100ms for both production and test
INVALID_CLASSROOM_MESSAGE_DELAY_MS=100

# Length of text preview in log messages (characters)
# Default: 100 characters for both production and test
LOG_TEXT_PREVIEW_LENGTH=100

# How often to run session cleanup checks
# Default: 120000ms (2 minutes) in production, 5000ms (5 seconds) in test
SESSION_CLEANUP_INTERVAL_MS=120000

# How long classroom codes remain valid
# Default: 7200000ms (2 hours) in production, 30000ms (30 seconds) in test
CLASSROOM_CODE_EXPIRATION_MS=7200000

# How often to clean up expired classroom codes
# Default: 900000ms (15 minutes) in production, 10000ms (10 seconds) in test
CLASSROOM_CODE_CLEANUP_INTERVAL_MS=900000

# How often to send health check pings to WebSocket clients
# Default: 30000ms (30 seconds) in production, 5000ms (5 seconds) in test
HEALTH_CHECK_INTERVAL_MS=30000

# ===== ANALYTICS SECURITY (Optional) =====

# Password for accessing the internal analytics page
# If not set, analytics page will be accessible without authentication (development only)
# Use a strong password for production environments
ANALYTICS_PASSWORD=

# Comma-separated list of IP addresses allowed to access analytics
# If not set, all IPs are allowed (development only)
# Example: ANALYTICS_ALLOWED_IPS=192.168.1.100,10.0.0.5,127.0.0.1
ANALYTICS_ALLOWED_IPS=

# ===== CLIENT-SIDE TIMEOUT CONFIGURATION (Optional) =====
# These values control client-side timeouts and are automatically scaled for tests

# WebSocket connection settings (milliseconds)
VITE_WS_MAX_RECONNECT_ATTEMPTS=5
VITE_WS_RECONNECT_DELAY_MS=3000

# Audio recording settings (milliseconds)  
VITE_SPEECH_RECOGNITION_RESTART_DELAY_MS=100
VITE_MOCK_AUDIO_DATA_DELAY_MS=150

# UI interaction timeouts (milliseconds)
VITE_ELEMENT_VISIBILITY_TIMEOUT_MS=10000
VITE_CONNECTION_STATUS_TIMEOUT_MS=10000
VITE_TEACHER_REGISTRATION_TIMEOUT_MS=10000
VITE_RECORD_BUTTON_TIMEOUT_MS=5000
VITE_SPEECH_RECOGNITION_UNAVAILABLE_TIMEOUT_MS=3000
VITE_WAIT_TIMEOUT_MS=1000
VITE_SHORT_WAIT_TIMEOUT_MS=500
VITE_ADJUSTABLE_WAIT_TIMEOUT_MS=1500

# Client-side test timing scale factor (0.01 to 1.0)
# Lower values make tests run faster by reducing timeouts proportionally
VITE_TEST_TIMING_SCALE=0.1

# ===== E2E TEST TIMEOUT CONFIGURATION (Optional) =====
# These values control E2E test timeouts and are automatically scaled

# Playwright settings (milliseconds)
PLAYWRIGHT_SERVER_STARTUP_TIMEOUT_MS=120000

# Test UI interaction timeouts (milliseconds)
TEST_ELEMENT_VISIBILITY_TIMEOUT_MS=10000
TEST_CONNECTION_STATUS_TIMEOUT_MS=10000  
TEST_TEACHER_REGISTRATION_TIMEOUT_MS=10000
TEST_RECORD_BUTTON_TIMEOUT_MS=5000
TEST_SPEECH_RECOGNITION_UNAVAILABLE_TIMEOUT_MS=3000

# Test wait timeouts (milliseconds)
TEST_SHORT_WAIT_MS=500
TEST_STANDARD_WAIT_MS=1000
TEST_ADJUSTABLE_WAIT_MS=1500

# Test mock timeouts (milliseconds)
TEST_MOCK_AUDIO_DATA_DELAY_MS=150

# All environment variables must be set explicitly. No defaults or localhost allowed.
# Example values below must be replaced for your environment.

# PORT=
# HOST=
# DATABASE_URL=
# OPENAI_API_KEY=
# VITE_API_URL=
# VITE_WS_URL=
