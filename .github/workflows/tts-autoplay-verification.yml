name: TTS Autoplay Verification Test

on:
  push:
    branches: [ main ]
    paths:
      - 'server/services/TextToSpeechService.ts'
      - 'server/services/WebSocketServer.ts'
      - 'client/public/**/*.html'
      - 'tests/selenium/tts_autoplay_verification.js'
  pull_request:
    branches: [ main ]
    paths:
      - 'server/services/TextToSpeechService.ts'
      - 'server/services/WebSocketServer.ts'
      - 'client/public/**/*.html'
      - 'tests/selenium/tts_autoplay_verification.js'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual verification of TTS autoplay functionality'

jobs:
  tts-autoplay-verification:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Install Selenium and browser drivers
      run: |
        npm install selenium-webdriver
        npm install chromedriver
        
    - name: Set up virtual display for browser tests
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        Xvfb :99 -screen 0 1280x1024x24 &
        echo "DISPLAY=:99" >> $GITHUB_ENV
        
    - name: Set up Audio support
      run: |
        sudo apt-get install -y alsa-utils
        
    - name: Start the application
      run: |
        npm run dev &
        sleep 10  # Wait for app to start
      env:
        NODE_ENV: development
        PORT: 5000
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Run TTS Autoplay verification test
      run: |
        node tests/selenium/tts_autoplay_verification.js
      env:
        TEST_URL: http://localhost:5000
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Upload test screenshots (if test failed)
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: test-screenshots
        path: tests/screenshots/
        
    - name: Generate test report
      if: always()
      run: |
        echo "# TTS Autoplay Verification Test Results" > test-report.md
        echo "## Run at: $(date)" >> test-report.md
        echo "## Status: ${{ job.status }}" >> test-report.md
        echo "## Details:" >> test-report.md
        if [ -f "test-output.log" ]; then
          echo '```' >> test-report.md
          cat test-output.log >> test-report.md
          echo '```' >> test-report.md
        else
          echo "No test output log available" >> test-report.md
        fi
        
    - name: Upload test report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: tts-autoplay-test-report
        path: test-report.md