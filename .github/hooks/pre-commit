#!/bin/bash

# Pre-commit hook to run tests before allowing a commit
# Installation: Copy this file to .git/hooks/pre-commit and make it executable

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}Running pre-commit checks...${NC}"

# Check if NPM is installed
if ! [ -x "$(command -v npm)" ]; then
  echo -e "${RED}Error: npm is not installed.${NC}" >&2
  exit 1
fi

# Run lint check
echo -e "${YELLOW}Running linting...${NC}"
npm run lint > /dev/null 2>&1
LINT_RESULT=$?

if [ $LINT_RESULT -ne 0 ]; then
  echo -e "${RED}Linting failed. Please fix linting issues before committing.${NC}"
  echo -e "Run 'npm run lint' to see the errors."
  exit 1
else
  echo -e "${GREEN}Linting passed!${NC}"
fi

# Run unit tests
echo -e "${YELLOW}Running unit tests...${NC}"
npm test -- --testPathPattern=tests/unit --silent
TEST_RESULT=$?

if [ $TEST_RESULT -ne 0 ]; then
  echo -e "${RED}Unit tests failed. Please fix failing tests before committing.${NC}"
  echo -e "Run 'npm test -- --testPathPattern=tests/unit' to see the errors."
  exit 1
else
  echo -e "${GREEN}Unit tests passed!${NC}"
fi

# Check commit message format
COMMIT_MSG_FILE=$1
COMMIT_MSG=$(cat $COMMIT_MSG_FILE)
PATTERN="^\[(feat|fix|docs|style|refactor|test|chore)\]: .+"

if ! [[ $COMMIT_MSG =~ $PATTERN ]]; then
  echo -e "${RED}Error: Invalid commit message format.${NC}"
  echo -e "Commit messages should follow the format: [type]: description"
  echo -e "Where type is one of: feat, fix, docs, style, refactor, test, chore"
  echo -e "Example: [feat]: add German language support"
  exit 1
else
  echo -e "${GREEN}Commit message format valid!${NC}"
fi

echo -e "${GREEN}All checks passed! Proceeding with commit...${NC}"
exit 0