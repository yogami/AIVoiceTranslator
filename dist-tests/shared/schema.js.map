{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../shared/schema.ts"],"names":[],"mappings":"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","sourcesContent":["import { pgTable, text, serial, integer, boolean, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const languages = pgTable(\"languages\", {\n  id: serial(\"id\").primaryKey(),\n  code: text(\"code\").notNull().unique(),\n  name: text(\"name\").notNull(),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const insertLanguageSchema = createInsertSchema(languages).pick({\n  code: true,\n  name: true,\n  isActive: true,\n});\n\nexport const translations = pgTable(\"translations\", {\n  id: serial(\"id\").primaryKey(),\n  sourceLanguage: text(\"source_language\").notNull(),\n  targetLanguage: text(\"target_language\").notNull(),\n  originalText: text(\"original_text\").notNull(),\n  translatedText: text(\"translated_text\").notNull(),\n  timestamp: timestamp(\"timestamp\").defaultNow(),\n  latency: integer(\"latency\"),\n});\n\nexport const insertTranslationSchema = createInsertSchema(translations).pick({\n  sourceLanguage: true,\n  targetLanguage: true,\n  originalText: true,\n  translatedText: true,\n  latency: true,\n});\n\nexport const transcripts = pgTable(\"transcripts\", {\n  id: serial(\"id\").primaryKey(),\n  sessionId: text(\"session_id\").notNull(),\n  language: text(\"language\").notNull(),\n  text: text(\"text\").notNull(),\n  timestamp: timestamp(\"timestamp\").defaultNow(),\n});\n\nexport const insertTranscriptSchema = createInsertSchema(transcripts).pick({\n  sessionId: true,\n  language: true,\n  text: true,\n});\n\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\n\nexport type Language = typeof languages.$inferSelect;\nexport type InsertLanguage = z.infer<typeof insertLanguageSchema>;\n\nexport type Translation = typeof translations.$inferSelect;\nexport type InsertTranslation = z.infer<typeof insertTranslationSchema>;\n\nexport type Transcript = typeof transcripts.$inferSelect;\nexport type InsertTranscript = z.infer<typeof insertTranscriptSchema>;\n"]}